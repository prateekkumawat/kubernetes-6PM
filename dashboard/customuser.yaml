apiVersion: v1
kind: ServiceAccount
metadata:
  name: developer
  namespace: kubernetes-dashboard

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: developer-reader
rules:
- apiGroups: ["*"]
  #
  # at the HTTP level, the name of the resource for accessing Secret
  # objects is "secrets"
  resources: ["secrets", "pods", "deployment", "pvc", "pv", "ingress", "*"]
  verbs: ["get", "watch", "list", "describe"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: developer-reader-bind
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: developer-reader
subjects:
- kind: ServiceAccount
  name: developer
  namespace: kubernetes-dashboard 

---
apiVersion: v1
kind: Secret
metadata:
  name: developer
  namespace: kubernetes-dashboard
  annotations:
    kubernetes.io/service-account.name: "developer"   
type: kubernetes.io/service-account-token  

# kubectl get secret developer -n kubernetes-dashboard -o jsonpath="{.data.token}" | base64 -d